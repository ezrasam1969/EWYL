<<App.js>>
import React from 'react'
import Cadets from './Cadets'
import { ChakraProvider } from '@chakra-ui/react';

const App = () => {
  return (
    <div className='Forms'>
      <ChakraProvider>
      <Cadets/>
      </ChakraProvider>
    </div>
  )
}

export default App;


<<index.js>>
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { ChakraProvider } from '@chakra-ui/react'
import { Input } from '@chakra-ui/react'
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <ChakraProvider>
      <App />
    </ChakraProvider> 
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();


<<Cadets.js>>

import React, { useState } from 'react';
import { Input } from '@chakra-ui/react'
import { px } from 'framer-motion'
import { Text } from '@chakra-ui/react'
import { Heading, Select} from '@chakra-ui/react'
import {InputGroup, InputLeftElement, InputRightElement, Stack, Flex } from '@chakra-ui/react'
import { Button, ButtonGroup } from '@chakra-ui/react'
import { Radio, RadioGroup } from '@chakra-ui/react'




const FormField = ({label,inputType,placeholder,value,onChange}) =>{
    return(
        <Flex align="center" marginBottom={4}>
      <Text fontSize='md' width="200px" textAlign="justify" marginRight={100}>{label}</Text>
    
        <Input type={inputType} placeholder={placeholder} value={value} onChange={onChange} htmlSize={14} width="300px" />
    </Flex>
  );
};

const Main = () => {


    const [fromDate, setFromDate] = useState('');
    const [toDate, setToDate] = useState('');
    const [proof, setProof] = useState(null);
    const [name, setName] = useState('');
    const [rank, setRank] = useState('');
    const [part, setPart] = useState('');
    const [award, setAward] = useState('');
    



    

  const handleSubmit = (event) => {
    event.preventDefault(); // Prevent the default form submission
    const formData = {

      fromDate,
      toDate,
      proof,
      name,
      rank,
      part,
      award,

    
      
    };
        console.log('Submitted Data:', formData);


    // Here you can add logic to save the data (e.g., send it to an API)
  };

  

  const handleReset = () => {


    setFromDate('');
    setToDate('');
    setName('');
    setRank('');
    setPart('');
    setAward('');
    setProof(null);

    



  };



  return (
    
    <Flex direction="column" align="center" justify="center" height="100vh" className='mains'>
    <div className='mains'>
        <Heading textAlign= "center" mb={4}>Faculty Activities</Heading>
        <hr/>
        <br/>
        <Heading textAlign= "center" size='md'mb={5}>Participation in NCC Camps & Examinations</Heading>
        
                <form onSubmit={handleSubmit}>
                <FormField label="Name of the Cadet :" inputType="text" placeholder="Enter your Name" value={name} onChange={(e) => setName(e.target.value)}/>
                <FormField label="Rank :" inputType="text" placeholder="Enter your Rank" value={rank} onChange={(e) => setRank(e.target.value)}/>

              <Flex direction="column" marginBottom={1}>
                                    <FormField label="From :" inputType="date" value={fromDate} onChange={(e) => setFromDate(e.target.value)} />
                                    <FormField label="To :" inputType="date" value={toDate} onChange={(e) => setToDate(e.target.value)} />
                                </Flex>
                                <Flex align="center" marginBottom={4}>
                     <Text fontSize='md' width="200px" textAlign="justify" marginRight={100}>Participation:</Text>
                      <Select align='center' placeholder='Participation' value={part} onChange={(e) => setPart(e.target.value)} width="300px">
                <option value='option1'>option1</option>
                <option value='option2'>option2</option>
                <option value='option3'>option3</option>
                <option value='option4'>option4</option>
                <option value='option5'>option5</option>
              </Select>
              </Flex>
                           
                    <FormField label="Award if/any :" inputType="text" placeholder="Name of the Award" value={award} onChange={(e) => setAward(e.target.value)}/>
                    <FormField label="Report/Certificate:" inputType="file" onChange={(e) => setProof(e.target.files[0])} />
                    <Stack spacing={220} direction="row" marginTop={0}>
                    <Button colorScheme='green'type="submit">Submit</Button>
                    <Button colorScheme='teal'variant="outline" onClick={handleReset}>Reset</Button>
 
      </Stack>
      </form>
      

            
                    

      
    </div>
    </Flex>
  );
};




export default Main;    
